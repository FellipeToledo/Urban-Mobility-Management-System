name: CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - '**.java'
      - 'pom.xml'
  pull_request:
    branches:
      - main

jobs:
  # Step 1: Setup JDK and Cache Dependencies
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

  # Step 2: Build and Test Each Microservice
  build-and-test:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        service: [ "event_service" ] # Adicione mais serviços à lista quando necessário
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and Test ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: mvn clean verify

  # Step 3: Publish Test Reports (Opcional)
  publish-test-results:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Archive test reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: "**/target/surefire-reports/*.xml"

  # Step 4: Deploy to Dev Environment (Opcional)
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Dev Environment
        run: |
          echo "Implementar o script de deploy"
